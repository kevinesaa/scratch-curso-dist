WEBVTT

1
00:00:04.530 --> 00:00:09.060
¿Viste alguna vez en un estadio
deportivo cuando la multitud hace la ola?

2
00:00:09.060 --> 00:00:12.500
Es muy lindo de ver y podemos
recrearlo en Scratch.

3
00:00:12.500 --> 00:00:16.530
Este ejemplo está adaptado
del link que ves en pantalla.

4
00:00:16.530 --> 00:00:20.895
En nuestra versión generaremos
el efecto moviendo el

5
00:00:20.895 --> 00:00:23.755
mouse sobre la tribuna como éste.

6
00:00:23.755 --> 00:00:28.730
Necesitaremos una tribuna
formada por muchas personas,

7
00:00:28.730 --> 00:00:32.830
cada una de las cuales hará sus movimientos
con los brazos cuando le toque.

8
00:00:32.830 --> 00:00:36.916
Si la tribuna tiene, por ejemplo,
cuatro filas de asientos y

9
00:00:36.916 --> 00:00:42.330
en cada uno se ubican ocho personas, ¿cómo
haremos para crear todos esos objetos?

10
00:00:42.330 --> 00:00:45.711
La respuesta está en los clones.

11
00:00:45.711 --> 00:00:51.419
La tribuna la generaremos a través de
clones de un único objeto persona, lo

12
00:00:51.419 --> 00:00:56.310
cual es bastante más eficiente que crear
un objeto separado para cada una de ellas.

13
00:00:56.310 --> 00:01:01.600
Comenzamos, creamos un nuevo proyecto
y agregamos un fondo de estadio

14
00:01:21.980 --> 00:01:26.360
También incluimos un personaje
similar al de la figura que vimos en la tribuna.

15
00:01:26.360 --> 00:01:30.927
Eliminamos el gato y
dibujamos el personaje.

16
00:01:30.927 --> 00:01:33.510
Convierto a mapa de bits.

17
00:01:45.945 --> 00:01:47.380
Lo duplicamos.

18
00:02:23.885 --> 00:02:25.066
Ahora analicemos el programa.

19
00:02:25.066 --> 00:02:29.200
Identificamos dos partes principales:

20
00:02:29.200 --> 00:02:33.460
la creación del público en la tribuna
y el comportamiento de la ola.

21
00:02:33.460 --> 00:02:38.230
La creación del público a su vez
puede ser descompuesta en dos partes:

22
00:02:38.230 --> 00:02:43.302
por un lado, la inicialización que implica
ubicar la persona en la pantalla y

23
00:02:43.302 --> 00:02:47.299
ponerle el disfraz de parado y
por otro, completar las gradas que

24
00:02:47.299 --> 00:02:51.490
implica clonar nuestra persona y
ubicarla en la posición correcta.

25
00:02:51.490 --> 00:02:54.520
Vamos a implementar en
Scratch la inicialización.

26
00:02:54.520 --> 00:02:57.335
El código incluye poner
el disfraz elegido y

27
00:02:57.335 --> 00:03:01.070
ubicarlo en el extremo superior
izquierdo de la tribuna.

28
00:03:01.070 --> 00:03:08.600
En nuestro caso es -200 120.

29
00:03:08.600 --> 00:03:13.679
Incluimos además el bloque
mostrar que nos será útil para ir

30
00:03:13.679 --> 00:03:16.869
viendo los distintos
clones que se crearán.

31
00:03:16.869 --> 00:03:18.719
Ahora completemos las gradas.

32
00:03:18.719 --> 00:03:21.880
Pensemos el seudocódigo y
luego lo pasamos a Scratch.

33
00:03:21.880 --> 00:03:27.160
Queremos que haya cuatro filas
con ocho personas en cada una.

34
00:03:27.160 --> 00:03:28.830
¿Cómo logramos esto?

35
00:03:28.830 --> 00:03:34.260
Usaremos la idea de los ciclos anidados
que aprendimos en una unidad previa.

36
00:03:34.260 --> 00:03:40.150
El primero es para cada fila y el segundo
es para cada ubicación dentro de la fila.

37
00:03:40.150 --> 00:03:44.896
En cada posición creamos un clon
y actualizamos la posición en x

38
00:03:44.896 --> 00:03:47.770
desplazando, por ejemplo, 40 pasos.

39
00:03:47.770 --> 00:03:51.969
Cuando cambiamos de fila
modificamos el valor de y 

40
00:03:51.969 --> 00:03:56.018
y actualizamos x para que quede
a la izquierda de la nueva fila.

41
00:03:56.018 --> 00:03:57.677
Vamos a implementar esta parte.

42
00:03:57.677 --> 00:04:01.070
De acuerdo con nuestro seudocódigo
usaremos dos bloques repetir.

43
00:04:05.265 --> 00:04:08.815
Dentro de este último bloque
repetir pondremos el bloque de

44
00:04:08.815 --> 00:04:14.060
crear clon y luego el
bloque de cambiar la x.

45
00:04:14.060 --> 00:04:18.660
Al terminar este bucle o ciclo
cambiamos la y y actualizamos la x.

46
00:04:30.115 --> 00:04:33.570
Cambiamos la y por -40,
fijamos la x a -200.	

47
00:04:33.570 --> 00:04:37.650
Finalmente escondemos el objeto como
hicimos en los ejemplos previos.

48
00:04:37.650 --> 00:04:42.049
El comportamiento de ola puede
ser logrado programando el

49
00:04:42.049 --> 00:04:44.390
comportamiento de cada clon.

50
00:04:44.390 --> 00:04:48.018
Este comportamiento será
por siempre, verificar si

51
00:04:48.018 --> 00:04:53.260
está siendo tocado por el ratón y en ese
caso levantar los brazos hasta arriba.

52
00:04:53.260 --> 00:04:57.670
Para este movimiento podemos usar la
secuencia de disfraces que creamos.

53
00:04:57.670 --> 00:04:59.977
Ahora programamos este comportamiento,

54
00:04:59.977 --> 00:05:02.610
incluimos el bloque cuando
comience como clon.

55
00:05:02.610 --> 00:05:05.654
El comportamiento de cada
clon será por siempre,

56
00:05:05.654 --> 00:05:09.430
verificar con un bloque si si
está siendo tocado por el ratón.

57
00:05:13.430 --> 00:05:16.960
En ese caso hace la secuencia de
disfraces para simular la ola.

58
00:05:16.960 --> 00:05:22.046
En este caso como son cuatro disfraces en
total, lo repite cuatro veces esperando un

59
00:05:22.046 --> 00:05:24.120
breve tiempo entre cada cambio.

60
00:05:37.030 --> 00:05:39.940
Vamos a probarlo.

61
00:05:43.240 --> 00:05:44.690
Sí, logramos nuestra ola.

62
00:05:44.690 --> 00:05:47.812
Puedes extender este ejemplo
incluyéndole sonidos u

63
00:05:47.812 --> 00:05:51.290
otros efectos gráficos cada vez
que la persona hace la ola.

64
00:05:51.290 --> 00:05:55.621
En los ejemplos que trabajamos en esta
unidad vimos formas más avanzadas de

65
00:05:55.621 --> 00:05:56.730
escribir código.

66
00:05:56.730 --> 00:06:00.483
Por ejemplo, a través de definir
nuestros propios bloques que

67
00:06:00.483 --> 00:06:03.624
representan secuencias de
instrucciones y el uso de

68
00:06:03.624 --> 00:06:07.630
los parámetros podemos generar nuevos
elementos para usar en nuestros programas.

69
00:06:07.630 --> 00:06:11.720
También vimos otro elemento
interesante que es la clonación.

70
00:06:11.720 --> 00:06:15.786
Al clonar un objeto podemos generar
la cantidad que necesitemos de

71
00:06:15.786 --> 00:06:20.500
objetos similares, lo que nos permite
fácilmente hacer juegos divertidos como

72
00:06:20.500 --> 00:06:23.359
romper burbujas con las
manos o cazar fantasmas.

73
00:06:23.359 --> 00:06:27.101
En nuestra última unidad integraremos
todo lo visto en el curso en

74
00:06:27.101 --> 00:06:31.070
un último desafío muy
completo e interesante.

75
00:06:31.070 --> 00:06:31.650
Nos vemos.